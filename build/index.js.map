{"version":3,"sources":["../src/index.js"],"names":["app","PORT","process","env","use","bodyParser","json","urlencoded","extended","get","req","res","status","message","error","next","db","sequelize","sync","alter","then","console","log","listen"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAMA;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACA,IAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEAD,GAAG,CAACI,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AACAN,GAAG,CAACI,GAAJ,CAAQC,uBAAWE,UAAX,CAAsB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAtB,CAAR;AACAR,GAAG,CAACI,GAAJ,CAAQ,uBAAR;AAEAJ,GAAG,CAACI,GAAJ,CAAQ,wBAAO,KAAP,CAAR,E,CACA;;AACAJ,GAAG,CAACS,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAa;AACtBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AACjBO,IAAAA,OAAO,EAAE;AADQ,GAArB;AAGH,CAJD;AAMAb,GAAG,CAACI,GAAJ,CAAQ,UAACM,GAAD,EAAMC,GAAN,EAAc;AAClBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AAACQ,IAAAA,KAAK,EAAE;AAAR,GAArB;AACH,CAFD;AAIAd,GAAG,CAACI,GAAJ,CAAQ,UAACU,KAAD,EAAQJ,GAAR,EAAaC,GAAb,EAAkBI,IAAlB,EAA2B;AAC/BJ,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBN,IAAhB,CAAqB;AACjBQ,IAAAA,KAAK,EAAEA,KAAK,CAACD,OADI;AAEjBE,IAAAA,IAAI,EAAJA;AAFiB,GAArB;AAIH,CALD;;AAOAC,mBAAGC,SAAH,CAAaC,IAAb,CAAkB;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAlB,EAAoCC,IAApC,CAAyC,YAAM;AAC3CC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAtB,EAAAA,GAAG,CAACuB,MAAJ,CAAWtB,IAAX,EAAgB,YAAM;AAClBoB,IAAAA,OAAO,CAACC,GAAR,qCAAyCrB,IAAzC;AACH,GAFD;AAGH,CALD;;eAOeD,G","sourcesContent":["import express from 'express';\nimport { config } from 'dotenv';\nimport db from './db/models'\nimport bodyParser from 'body-parser'; \nimport morgan from 'morgan';\nimport cors from 'cors'\n\n\n\n\n\nconfig();\n\nconst app = express();\nconst PORT = process.env.PORT || 2000;\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }))\napp.use(cors());\n\napp.use(morgan(\"dev\"))\n// app.use(router)\napp.get('/', (req, res) =>{\n    res.status(200).json({\n        message: 'Welcome to Smart Attendance '\n    });\n});\n\napp.use((req, res) => {\n    res.status(404).json({error: 'route not found'});\n});\n\napp.use((error, req, res, next) => {\n    res.status(500).json({\n        error: error.message,\n        next\n    })\n})\n\ndb.sequelize.sync({ alter: false }).then(() => {\n    console.log('Database Connected!');\n    app.listen(PORT,() => {\n        console.log(`Server listening on port: ${PORT}`)\n    })\n})\n\nexport default app;"],"file":"index.js"}